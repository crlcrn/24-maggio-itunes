import flet as ft

from database.DAO import DAO


class Controller:
    def __init__(self, view, model):
        # the view, with the graphical elements of the UI
        self._view = view
        # the model, which implements the logic of the program and holds the data
        self._model = model


    def fillDD(self):

        generi = DAO.get_genere()
        for g in generi:
            self._view.ddgenere.options.append(ft.dropdown.Option(text=f'{g.Name}', key = g.GenreId))

        self._view.update_page()


    def fillDDcanzone(self):

        self._view.ddsong.options.clear()

        for track in sorted(self._model._nodi, key = lambda t:t.Name):
            self._view.ddsong.options.append(ft.dropdown.Option(text = track.Name, key = track.TrackId))

        self._view.update_page()



    def handle_graph(self, e):

        self._view.txt_result.controls.clear()
        genere = self._view.ddgenere.value
        if genere is None:
            self._view.txt_result.controls.append(ft.Text(f"devi selezionare un valore"))
            self._view.update_page()
            return

        self._model.buildGraph(genere)
        nNodes, nEdges = self._model.getDetails()
        self._view.txt_result.controls.append(ft.Text(f"Grafo correttamente creato"))
        self._view.txt_result.controls.append(ft.Text(f"Il grafo ha {nNodes} nodi e {nEdges} vertici"))


        self.fillDDcanzone()
        self._view.update_page()


    def handle_delta(self, e):

        delta_max = self._model.getDeltaMassimo()

        self._view.txt_result.controls.append(ft.Text('Coppie con delta massimo'))

        for t1, t2, delta in delta_max:
            self._view.txt_result.controls.append(ft.Text(f'{t1.Name}, {t2.Name} -> {delta} ms'))

        self._view.update_page()



    def handle_lista(self, e):
        pass

import networkx as nx

from database.DAO import DAO


class Model:
    def __init__(self):
        self._grafo = nx.Graph()
        self._nodi = []
        self._idMap = {}

    def buildGraph(self, genere):
        self._grafo.clear()
        self._nodi = DAO.get_nodi(genere)
        for t in self._nodi:
            self._idMap[t.TrackId] = t

        self._grafo.add_nodes_from(self._nodi)

        archi = DAO.get_archi(genere)
        for t1, t2, peso in archi:
            self._grafo.add_edge(self._idMap[t1], self._idMap[t2], weight = peso)


    def getDetails(self):
        return len(self._grafo.nodes), len(self._grafo.edges)

    def getDeltaMassimo(self):

        max_delta = -1
        result = []

        for u,v, data in self._grafo.edges(data=True):
            peso = data['weight']
            if peso > max_delta:
                max_delta = peso
                result = [(u,v,peso)]

            elif peso == max_delta:
                result.append((u,v,peso))


        return result

